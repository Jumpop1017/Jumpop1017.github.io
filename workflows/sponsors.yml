name: Refresh sponsors & trends

on:
  schedule:
    - cron: '17 3 * * *'   # chaque jour 03:17 UTC
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-data:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Fetch sponsors via GraphQL
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OWNER: ${{ github.repository_owner }}
        run: |
          jq --version || sudo apt-get update && sudo apt-get install -y jq curl
          query='query($login:String!,$end:String){
            user(login:$login){
              sponsors(first:100, after:$end){
                pageInfo{ hasNextPage endCursor }
                nodes{ login }
              }
            }
          }'
          end="null"
          logins=()
          while true; do
            resp=$(curl -s -H "Authorization: bearer $GH_TOKEN" -X POST -d "{"query":"$query","variables":{"login":"$OWNER","end":$end}}" https://api.github.com/graphql)
            page=$(echo "$resp" | jq -r '.data.user.sponsors.nodes[]?.login')
            while IFS= read -r l; do [ -n "$l" ] && logins+=("$l"); done <<< "$page"
            hasNext=$(echo "$resp" | jq -r '.data.user.sponsors.pageInfo.hasNextPage')
            endCursor=$(echo "$resp" | jq -r '.data.user.sponsors.pageInfo.endCursor')
            if [ "$hasNext" = "true" ] && [ "$endCursor" != "null" ]; then end="\"$endCursor\""; else break; fi
          done
          mkdir -p data
          printf '[' > data/sponsors.json
          first=1
          for l in "${logins[@]}"; do
            if [ $first -eq 1 ]; then first=0; else printf ',' >> data/sponsors.json; fi
            printf '{{"login":"%s"}}' "$l" >> data/sponsors.json
          done
          printf ']\n' >> data/sponsors.json

      - name: Fetch simple trends (RSS â†’ JSON) [optionnel]
        run: |
          mkdir -p data
          curl -s https://hnrss.org/frontpage | awk 'BEGIN{{print "["}} /<item>/{{in=1;title="";link=""}} in&&/<title>/{{gsub(/.*<title>|<\/title>.*/,""); title=$0}} in&&/<link>/{{gsub(/.*<link>|<\/link>.*/,""); link=$0}} /<\/item>/{{in=0; printf("{{\"title\":\"%s\",\"url\":\"%s\",\"source\":\"RSS\"}},", title, link)}} END{{print "]"}}' | sed 's/,]/]/' > data/trends.json

      - name: Commit data
        run: |
          git config user.name "github-actions"
          git config user.email "actions@users.noreply.github.com"
          git add data/sponsors.json data/trends.json || true
          git commit -m "chore(data): refresh sponsors & trends" || echo "no changes"
          git push
